# ******************************************************************************* 
# * Copyright (c) contributors to the Minerva for Modernization project.
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# * 
# *     http://www.apache.org/licenses/LICENSE-2.0
# * 
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *
# * Contributors:
# *     IBM Corporation - initial implementation
# *******************************************************************************

# NLS_MESSAGEFORMAT_VAR
# NLS_ENCODING=UNICODE

BadMessageKey = Le message d''erreur correspondant \u00e0 la cl\u00e9 de message "{0}" est introuvable.
FormatFailed = Une erreur interne s'est produite lors du formatage du message suivant :\n

StartingAnalyzer = D\u00e9marrage de l'analyseur binaire Minerva
AnalyzingArchive = Analyse de l''archive {0}.
OutputDirectory = R\u00e9pertoire de sortie : {0}
PackageIncludeList = Liste d''inclusion de packages : {0}
PackageExcludeList = Liste d''exclusion de packages : {0}
AgentOutputStream = Configuration du flux de sortie de l''agent : {0}.
CallGraphAlgorithm = Algorithme de g\u00e9n\u00e9ration de graphique d''appels : {0}.

AnalyzingClass = Analyse de la classe {0}.
DuplicateClass = Classe en double {0} trouv\u00e9e. Seule la premi\u00e8re instance de cette classe est analys\u00e9e.
SkippedClass = La classe {0} a \u00e9t\u00e9 trouv\u00e9e dans l''archive mais n''a pas \u00e9t\u00e9 analys\u00e9e.

DirectoryCreated = R\u00e9pertoire {0} cr\u00e9\u00e9.
WritingFile = Ecriture du fichier {0}.

ArchiveDoesNotExist = L''archive {0} n''existe pas.
ArchiveEmpty = L''archive {0} est un fichier vide.
ArchiveReadFile = Lecture du fichier {0} \u00e0 partir de l''archive.
ArchiveReadError = Une erreur s''est produite lors de la tentative de lecture d''un fichier {0}. Message : {1}
ArchiveCloseError = Une erreur s''est produite lors de la tentative de fermeture d''un fichier {0}. Message : {1}

CallGraphClassHierarchyBuild = G\u00e9n\u00e9ration de la hi\u00e9rarchie de classes pour la g\u00e9n\u00e9ration de graphique d'appels...
CallGraphEndpointCalculation = Calcul des noeuds finaux pour la g\u00e9n\u00e9ration de graphique d'appels...
CallGraphBuildInitial = G\u00e9n\u00e9ration du graphique d'appels initial...
CallGraphBuildFinal = G\u00e9n\u00e9ration du graphique d'appels pond\u00e9r\u00e9 et orient\u00e9 final...
CallGraphTempFileWriteWarning = La classe {0} sera trait\u00e9e en m\u00e9moire car son fichier temporaire n''a pas pu \u00eatre cr\u00e9\u00e9. Message : {1}
CallGraphTempFileReadError = Une erreur s''est produite lors de la tentative de lecture du fichier temporaire pour la classe {0}. Message : {1}
CallGraphBuildError = Une erreur inattendue s''est produite lors de la tentative de g\u00e9n\u00e9ration du graphique d''appels. Message : {0}
CallGraphWriteError = Une erreur inattendue s''est produite lors de la tentative d''\u00e9criture du graphique d''appels dans le fichier {0}. Message : {1}
