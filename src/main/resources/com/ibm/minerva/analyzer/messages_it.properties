# ******************************************************************************* 
# * Copyright (c) contributors to the Minerva for Modernization project.
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# * 
# *     http://www.apache.org/licenses/LICENSE-2.0
# * 
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *
# * Contributors:
# *     IBM Corporation - initial implementation
# *******************************************************************************

# NLS_MESSAGEFORMAT_VAR
# NLS_ENCODING=UNICODE

BadMessageKey = Impossibile trovare il messaggio di errore corrispondente alla chiave di messaggio "{0}".
FormatFailed = Si \u00e8 verificato un errore interno durante la formattazione del seguente messaggio:\n

StartingAnalyzer = Avvio di Minerva Binary Analyzer
AnalyzingArchive = Analisi dell''archivio {0}.
OutputDirectory = Directory di output: {0}
PackageIncludeList = Elenco di inclusioni nel pacchetto: {0}
PackageExcludeList = Elenco di esclusioni dal pacchetto: {0}
AgentOutputStream = Configurazione OutputStream agent: {0}.
CallGraphAlgorithm = Algoritmo del programma di creazione del grafico chiamate: {0}.

AnalyzingClass = Analisi della classe {0}.
DuplicateClass = Classe duplicata {0} trovata. Viene analizzata solo la prima istanza di questa classe.
SkippedClass = La classe {0} \u00e8 stata trovata nell''archivio ma non \u00e8 stata analizzata.

DirectoryCreated = Creata la directory {0}.
WritingFile = Scrittura del file {0}.

ArchiveDoesNotExist = L''archivio {0} non esiste.
ArchiveEmpty = L''archivio {0} \u00e8 un file vuoto.
ArchiveReadFile = Lettura del file {0} dall''archivio.
ArchiveReadError = Si \u00e8 verificato un errore durante il tentativo di leggere un file {0}. Messaggio: {1}
ArchiveCloseError = Si \u00e8 verificato un errore durante il tentativo di chiudere un file {0}. Messaggio: {1}

CallGraphClassHierarchyBuild = Creazione della gerarchia di classi per la creazione del grafico chiamate...
CallGraphEndpointCalculation = Calcolo degli endpoint per la generazione del grafico chiamate...
CallGraphBuildInitial = Creazione del grafico chiamate iniziale...
CallGraphBuildFinal = Creazione del grafico chiamate finale ponderato e diretto...
CallGraphTempFileWriteWarning = La classe {0} verr\u00e0 elaborata in memoria perch\u00e9 non \u00e8 stato possibile creare il relativo file temporaneo. Messaggio: {1}
CallGraphTempFileReadError = Si \u00e8 verificato un errore durante il tentativo di leggere il file temporaneo per la classe {0}. Messaggio: {1}
CallGraphBuildError = Si \u00e8 verificato un errore non previsto durante il tentativo di creare il grafico chiamate. Messaggio: {0}
CallGraphWriteError = Si \u00e8 verificato un errore imprevisto durante il tentativo di scrittura del grafico chiamate sul file {0}. Messaggio: {1}
